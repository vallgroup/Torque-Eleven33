/* autoprefixer grid: no-autoplace */

.gallery-module {
  .gallery-grid-root {
    .grid-image {
      width: 100%;
      height: auto;
    }

    /*
      Tablet only (not inherited by desktop)
     */

    @include respond-to(tablet) {
      @include respond-to-max(desktop) {
        margin: 0 -2vw;
        display: flex;
        flex-wrap: wrap;

        .grid-image {
          margin: 2vw;
          width: auto;
          height: 400px;
          object-fit: cover;
          object-position: center;

          @for $i from 1 through 12 {
            $width: ($i / 12) * 100 + %;

            &.grid-width-#{$i} {
              flex: 1 0 $width;
              width: $width;
            }
          }
        }
      }
    }

    /*
      Desktop
     */
    @include respond-to(desktop) {
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      grid-row-gap: 25px;
      grid-column-gap: 25px;

      @for $i from 1 through 2 {
        &.grid-rows-#{$i} {
          grid-template-rows: repeat($i, 400px);
        }
      }

      .grid-image {
        width: 100%;
        height: 100%;
        object-fit: cover;

        @for $i from 0 through 11 {
          // possible col start value
          $start: $i + 1;
          // note: column line index starts at 1
          @for $width from 0 through 12 {
            // possible width values
            @if $i + $width <= 12 {
              // optimise css size - no point having start + width > 12 as itll never occur
              &.grid-column-#{$i}-#{$width} {
                grid-column-start: $start; //
                grid-column-end: $start + $width;
              }
            }
          }
        }

        @for $i from 0 through 1 {
          $start: $i + 1;

          @for $height from 1 through 2 {
            &.grid-row-#{$i}-#{$height} {
              grid-row-start: $start;
              grid-row-end: $start + $height;
            }
          }
        }
      }
    }
  }
}
